import { Notify } from 'quasar'

Notify.setDefaults({ position: 'top', timeout: 2500 })

const AppNotify = {
    notifySuccess: (message) => Notify.create({ type: 'positive', message }),
    notifyInfo: (message) => Notify.create({ type: 'info', message }),
    notifyWarning: (message) => Notify.create({ type: 'warning', message }),
    notifyError: (message) => Notify.create({ type: 'negative', message }),
    notifyResponse: (status, message) => {
        if (status === 'success') this.notifySuccess(message)
        else if (status === 'error') this.notifyError(message)
        else if (status === 'info') this.notifyInfo(message)
        else this.notifyWarning(message)
    },
    notifyResponseArray: (data, status = 'warning') => {
        const getkey = Object.keys(data)
        try {
            getkey.forEach(key => { data[key].forEach(msg => this.notifyResponse(status, msg)) })
        } catch (error) {
            this.notifyResponse(status, data)
        }
    }
}

export default AppNotify
