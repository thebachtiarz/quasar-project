const regName = /^[a-zA-Z_\s]+$/i
const regMail = /^[^\s@]+@[^\s@]+\.[^\s@]+$/
const regPass = { lowercase: /[a-z]/g, uppercase: /[A-Z]/g, numeric: /[0-9]/g, special: /[^0-9a-zA-Z]/g }

const RegexValidation = {
  nameRegex (input) {
    if (input.length > 0) {
      if (regName.test(input)) {
        return { result: true, status: 'success', message: 'Name is correct' }
      } else {
        return { result: false, status: 'error', message: 'Name format is wrong' }
      }
    } else {
      return { result: false, status: 'error', message: 'Name cannot be empty' }
    }
  },
  mailRegex (input) {
    if (input.length > 0) {
      if (regMail.test(input)) {
        return { result: true, status: 'success', message: 'Email is correct' }
      } else {
        return { result: false, status: 'error', message: 'Email format is wrong' }
      }
    } else {
      return { result: false, status: 'error', message: 'Email cannot be empty' }
    }
  },
  passRegex (input) {
    let tmpmsg = { start: 'Requires ', finish: ' characters' }
    let arrmsg = []
    let retmsg = ''
    let lengthpass = 8
    if (input.length > 0) {
      const lowercase = input.match(regPass.lowercase) || []
      const uppercase = input.match(regPass.uppercase) || []
      const numeric = input.match(regPass.numeric) || []
      const special = input.match(regPass.special) || []
      if (!lowercase.length) arrmsg.push('lowercase')
      if (!uppercase.length) arrmsg.push('UPPERCASE')
      if (!numeric.length) arrmsg.push('num3r1c')
      if (!special.length) arrmsg.push('$pec!al')
      if (arrmsg.length === 0) {
        if (input.length < lengthpass) {
          retmsg = `You only need ${lengthpass - input.length} more characters`
          return { result: false, status: 'error', message: retmsg }
        } else {
          retmsg = 'You have strong and correct password'
          return { result: true, status: 'success', message: retmsg }
        }
      } else {
        retmsg = tmpmsg.start + arrmsg.join(', ') + tmpmsg.finish
        return { result: false, status: 'error', message: retmsg }
      }
    } else {
      retmsg = 'Password cannot be empty'
      return { result: false, status: 'error', message: retmsg }
    }
  }
}
export default RegexValidation
