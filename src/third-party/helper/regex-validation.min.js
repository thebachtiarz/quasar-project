const regName = /^[a-zA-Z_\s]+$/i
const regMail = /^[^\s@]+@[^\s@]+\.[^\s@]+$/
const regPass = {
  lowercase: /[a-z]/g,
  uppercase: /[A-Z]/g,
  numeric: /[0-9]/g,
  special: /[^0-9a-zA-Z]/g
}

const RegexValidation = {
  nameRegex (input) {
    if (input.length > 0) {
      if (regName.test(input)) {
        return { result: true, status: 'success', message: 'Name is correct' }
      } else {
        return {
          result: false,
          status: 'error',
          message: 'Name format is wrong'
        }
      }
    } else {
      return {
        result: false,
        status: 'error',
        message: 'Name cannot be empty'
      }
    }
  },
  mailRegex (input) {
    if (input.length > 0) {
      if (regMail.test(input)) {
        return { result: true, status: 'success', message: 'Email is correct' }
      } else {
        return {
          result: false,
          status: 'error',
          message: 'Email format is wrong'
        }
      }
    } else {
      return {
        result: false,
        status: 'error',
        message: 'Email cannot be empty'
      }
    }
  },
  passRegex (input) {
    var message = []
    if (input.length > 0) {
      const lowercase = input.match(regPass.lowercase) || []
      const uppercase = input.match(regPass.uppercase) || []
      const numeric = input.match(regPass.numeric) || []
      const special = input.match(regPass.special) || []
      if (!lowercase.length) message.push('Requires lowercase characters')
      if (!uppercase.length) message.push('Requires UPPERCASE characters')
      if (!numeric.length) message.push('Requires num3r1c characters')
      if (!special.length) message.push('Requires $pec!al characters')
      if (message.length === 0) {
        message.push('You have strong and correct password')
        return { result: true, status: 'success', message: message }
      } else {
        return { result: false, status: 'error', message: message }
      }
    } else {
      message.push('Password cannot be empty')
      return { result: false, status: 'error', message: message }
    }
  }
}
export default RegexValidation
