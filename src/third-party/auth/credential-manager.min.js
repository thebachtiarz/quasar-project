import { Cookies } from 'quasar'
const defaultStorage = 'storage' // ! 'cookie' / 'storage'
const defaultName = '_jwtApiToken'
// @ cookie management
const cookieSetCreds = (data) => Cookies.set(defaultName, data)
const cookieGetCreds = () => Cookies.get(defaultName)
const cookieRemoveCreds = () => Cookies.remove(defaultName)
// @ local-storage management
const storageSetCreds = (data) => localStorage.setItem(defaultName, data)
const storageGetCreds = () => localStorage.getItem(defaultName)
const storageRemoveCreds = () => localStorage.removeItem(defaultName)
// @ creds management core
const setCreds = (data) => {
  if (defaultStorage === 'cookie') cookieSetCreds(data)
  else if (defaultStorage === 'storage') storageSetCreds(data)
}
const getCreds = () => {
  if (defaultStorage === 'cookie') return cookieGetCreds()
  else if (defaultStorage === 'storage') return storageGetCreds()
}
const removeCreds = () => {
  if (defaultStorage === 'cookie') return cookieRemoveCreds()
  else if (defaultStorage === 'storage') return storageRemoveCreds()
}
// @ real creds engine
const credMng = {
  credentialKeySave: (data, rmb = '') => setCreds(data),
  credentialKeyTake: () => getCreds(),
  credentialKeyRemove: () => removeCreds(),
  axiosHeaderToken: () => { return { headers: { Authorization: `Bearer ${getCreds()}` } } }
}
export default credMng
