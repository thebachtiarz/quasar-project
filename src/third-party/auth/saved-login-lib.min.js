import { Cookies } from 'quasar'
import forge from 'node-forge'
const defaultStorage = 'storage' // ! 'cookie' / 'storage'
// ! cookie method
// ?: set logins
const cookieSetLogin = (data) => {
    // todo: push data
}
// ?: get saved logins
const cookieGetLogin = () => {
    // todo: get data
}
// ?: count saved logins
const cookieCountLogin = () => {
    // todo: count data
}
// ?: delete saved logins
const cookieDeleteLogin = (key) => {
    // todo: delete selected or all data
}
// ! storage method
// ?: set logins
const storageSetLogin = (data) => {
    // todo: push data
}
// ?: get saved logins
const storageGetLogin = () => {
    // todo: get data
}
// ?: count saved logins
const storageCountLogin = () => {
    // todo: count data
}
// ?: delete saved logins
const storageDeleteLogin = (key) => {
    // todo: delete selected or all data
}
// @ core engine
const setLogin = (data) => {
    if (defaultStorage === 'cookie') return cookieSetLogin(data)
    else if (defaultStorage === 'storage') return storageSetLogin(data)
}
const getLogin = () => {
    if (defaultStorage === 'cookie') return cookieGetLogin()
    else if (defaultStorage === 'storage') return storageGetLogin()
}
const countLogin = () => {
    if (defaultStorage === 'cookie') return cookieCountLogin()
    else if (defaultStorage === 'storage') return storageCountLogin()
}
const removeLogin = (key) => {
    if (defaultStorage === 'cookie') return cookieDeleteLogin(key)
    else if (defaultStorage === 'storage') return storageDeleteLogin()
}
// @ main engine
const SavedLogin = {
    loginSave: (data) => setLogin(data),
    loginTake: () => getLogin(),
    loginCount: () => countLogin(),
    loginRemove: (key) => removeLogin(key),
}
export default SavedLogin;